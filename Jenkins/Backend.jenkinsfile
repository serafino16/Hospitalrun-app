pipeline {
    agent any

    environment {
        AWS_REGION = "us-west-2"
        ECR_BACKEND_REPO = "<aws_account_id>.dkr.ecr.us-west-2.amazonaws.com/hospitalrun-backend"
        EKS_CLUSTER_NAME = "hospitalrun-cluster"
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    docker.build('backend', './backend')
                }
            }
        }

        stage('Login to Amazon ECR') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'aws-ecr-credentials', usernameVariable: 'AWS_ACCESS_KEY_ID', passwordVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                        sh """
                        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_BACKEND_REPO
                        """
                    }
                }
            }
        }

        stage('Push Docker Image to ECR') {
            steps {
                script {
                    docker.tag('backend', "$ECR_BACKEND_REPO")
                    docker.push("$ECR_BACKEND_REPO")
                }
            }
        }

        stage('Deploy to EKS') {
            steps {
                script {
                    sh """
                    aws eks --region $AWS_REGION update-kubeconfig --name $EKS_CLUSTER_NAME
                    kubectl apply -f k8s/backend-deployment.yaml
                    kubectl apply -f k8s/ingress.yaml  
                    """
                }
            }
        }

        stage('Post-Deployment Verification') {
            steps {
                script {
                    sh 'kubectl get pods'
                    sh 'kubectl get svc'
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            echo "Backend Deployment to EKS was successful!"
        }
        failure {
            echo "Backend Deployment failed. Please check the logs."
        }
    }
}
